---
import type { Image } from '../../lib/types';
import { urlForImage } from '../../lib/urlForImage';

export interface Props {
  title: string;
  description: string;
  image: Image;
  cta1: {
    buttonText: string;
    buttonLink: string;
  };
  cta2: {
    buttonText: string;
    buttonLink: string;
  };
}

const { title, image, cta1, cta2, description } = Astro.props;
const bgImageUrl = image ? urlForImage(image).url() : '';
---

<section class="hero" style={`background-image: url('${bgImageUrl}')`}>
  <div class="hero__content">
    <h1 class="hero__title">{title}</h1>
    {description && <p class="hero__text">{description}</p>}
    <div class="hero__cta-container">
      {cta1 && (
        <a href={cta1.buttonLink} class="button button--primary">
          {cta1.buttonText}
        </a>
      )}
      {cta2 && (
        <a href={cta2.buttonLink} class="button button--secondary">
          {cta2.buttonText}
        </a>
      )}
    </div>
  </div>
</section>

<style lang="scss">
@use '../../styles/variables' as *;

.hero {
  min-height: 80vh;
  display: flex;
  align-items: center;
  justify-content: center;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  color: $color-white;
  text-align: center;
  padding: 2rem 1rem;
  position: relative;
  font-family: $font-family-sans;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(to bottom, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0.7) 100%);
    z-index: 1;
  }
}

.hero__content {
  position: relative;
  z-index: 2;
  max-width: 800px;
  margin: 0 auto;
  padding: 2rem;
  background-color: rgba(0, 0, 0, 0.6);
  border-radius: 1rem;
  backdrop-filter: blur(5px);
}

.hero__title {
  font-size: 3.5rem;
  margin-bottom: 1.5rem;
  line-height: 1.2;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
  
  @media (max-width: $breakpoint-md) {
    font-size: 2.5rem;
  }
  
  @media (max-width: $breakpoint-sm) {
    font-size: 2rem;
  }
}

.hero__text {
  font-size: 1.25rem;
  margin-bottom: 2rem;
  max-width: 700px;
  margin-left: auto;
  margin-right: auto;
  line-height: 1.6;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
  
  @media (max-width: $breakpoint-md) {
    font-size: 1.1rem;
  }
}

.hero__cta-container {
  display: flex;
  gap: 1rem;
  justify-content: center;
  flex-wrap: wrap;
  
  @media (max-width: $breakpoint-sm) {
    flex-direction: column;
    align-items: center;
    width: 100%;
    
    .button {
      width: 100%;
      max-width: 300px;
    }
  }
}

.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.75rem 2rem;
  border-radius: 50px;
  font-weight: 600;
  text-decoration: none;
  transition: all 0.3s ease;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-size: 0.9rem;
  border: 2px solid transparent;
  
  &--primary {
    background-color: $color-primary;
    color: $color-white;
    
    &:hover {
      background-color: darken($color-primary, 10%);
      transform: translateY(-2px);
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }
  }
  
  &--secondary {
    background-color: transparent;
    color: $color-white;
    border-color: $color-white;
    
    &:hover {
      background-color: rgba(255, 255, 255, 0.1);
      transform: translateY(-2px);
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }
  }
}
</style>