---
import type { Image } from '../../lib/types';
import { urlForImage } from '../../lib/urlForImage';

export interface Props {
  title: string;
  description: string;
  image: Image;
  cta1: {
    buttonText: string;
    buttonLink: string;
  };
  cta2: {
    buttonText: string;
    buttonLink: string;
  };
}

const { title, image, cta1, cta2, description } = Astro.props;
const bgImageUrl = image ? urlForImage(image).url() : '';
---

<section 
  class="relative flex min-h-[90vh] items-center bg-cover bg-fixed bg-center bg-no-repeat px-4 py-16 text-white md:py-24"
  style={`background-image: linear-gradient(90deg, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.5) 100%), url('${bgImageUrl}')`}
>
  <div class="container mx-auto flex h-full items-center">
    <div class="w-full md:w-1/2"></div>
    
    <div class="relative z-10 w-full max-w-2xl space-y-6 rounded-xl p-8 backdrop-blur-sm md:bg-black/30 md:p-10">
      <div class="space-y-2">
        <h1 class="text-4xl font-bold leading-tight text-white sm:text-4xl md:text-5xl lg:text-6xl">
          {title}
        </h1>
      </div>
      
      {description && (
        <p class="text-lg leading-relaxed text-gray-200 sm:text-xl">
          {description}
        </p>
      )}
      
      <div class="flex flex-wrap gap-4 pt-4">
        {cta1 && (
          <a 
            href={cta1.buttonLink}
            class="transform rounded-xl bg-gradient-to-r from-blue-600 to-blue-700 px-8 py-4 text-sm font-semibold text-white shadow-lg transition-all duration-300 hover:-translate-y-1 hover:shadow-xl hover:shadow-blue-600/25 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
          >
            {cta1.buttonText}
          </a>
        )}
        
        {cta2 && (
          <a 
            href={cta2.buttonLink}
            class="transform rounded-xl border-2 border-white/20 bg-white/10 px-8 py-4 text-sm font-semibold text-white backdrop-blur-sm transition-all duration-300 hover:-translate-y-1 hover:bg-white/20 hover:shadow-lg hover:shadow-white/10 focus:outline-none focus:ring-2 focus:ring-white/50 focus:ring-offset-2"
          >
            {cta2.buttonText}
          </a>
        )}
      </div>
    </div>
  </div>
  
  <!-- Scroll indicator -->
  <div class="absolute bottom-8 left-1/2 -translate-x-1/2 animate-bounce">
    <div class="h-8 w-5 rounded-full border-2 border-white">
      <div class="mx-auto mt-1 h-1 w-1 animate-scroll rounded-full bg-white"></div>
    </div>
  </div>
  
  <style>
    @keyframes scroll {
      0% { transform: translateY(0); opacity: 1; }
      100% { transform: translateY(10px); opacity: 0; }
    }
    .animate-scroll {
      animation: scroll 1.5s infinite;
    }
  </style>
</section>