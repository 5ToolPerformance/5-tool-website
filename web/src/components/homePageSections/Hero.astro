---
import type { Image } from '../../lib/types';
import { urlForImage } from '../../lib/urlForImage';

export interface Props {
  title: string;
  description: string;
  image: Image;
  cta1: {
    buttonText: string;
    buttonLink: string;
  };
  cta2: {
    buttonText: string;
    buttonLink: string;
  };
}

const { title, image, cta1, cta2, description } = Astro.props;
const bgImageUrl = image ? urlForImage(image).url() : '';
---

<section 
  class="relative flex min-h-[80vh] items-center justify-center bg-cover bg-center bg-no-repeat px-4 py-8 text-center text-white"
  style={`background-image: url('${bgImageUrl}')`}
>
  <div class="absolute inset-0 bg-gradient-to-b from-black/30 to-black/70"></div>
  
  <div class="relative z-10 mx-auto max-w-4xl rounded-2xl bg-black/60 p-8 backdrop-blur-sm">
    <h1 class="mb-6 text-4xl font-bold leading-tight text-white drop-shadow-lg sm:text-5xl md:text-6xl">
      {title}
    </h1>
    
    {description && (
      <p class="mx-auto mb-8 max-w-3xl text-lg text-gray-100 sm:text-xl">
        {description}
      </p>
    )}
    
    <div class="flex flex-wrap justify-center gap-4">
      {cta1 && (
        <a 
          href={cta1.buttonLink}
          class="rounded-lg bg-blue-600 px-6 py-3 text-sm font-semibold text-white shadow-sm hover:bg-blue-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600"
        >
          {cta1.buttonText}
        </a>
      )}
      
      {cta2 && (
        <a 
          href={cta2.buttonLink}
          class="rounded-lg bg-white/10 px-6 py-3 text-sm font-semibold text-white shadow-sm hover:bg-white/20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-white/20"
        >
          {cta2.buttonText}
        </a>
      )}
    </div>
  </div>
</section>