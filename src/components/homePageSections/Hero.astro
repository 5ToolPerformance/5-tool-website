---
import type { ImageType } from "../../lib/types";
import { urlForImage } from "../../lib/urlForImage";

export interface Props {
  title: string;
  description: string;
  image: ImageType;
  cta1: {
    buttonText: string;
    buttonLink: string;
  };
  cta2: {
    buttonText: string;
    buttonLink: string;
  };
}

const { title, image, cta1, cta2, description } = Astro.props;
const bgImageUrl = image ? urlForImage(image).url() : "";
---

<section
  class="relative flex min-h-[90vh] items-center bg-cover bg-fixed bg-center bg-no-repeat px-4 py-16 text-white md:py-24 overflow-hidden"
  style={`background-image: linear-gradient(135deg, rgba(0, 57, 166, 0.5) 0%, rgba(0, 34, 102, 0.6) 100%), url('${bgImageUrl}')`}
>
  <div
    class="container mx-auto flex h-full items-center justify-center md:justify-end"
  >
    <div
      class="w-full max-w-2xl space-y-6 rounded-xl p-8 backdrop-blur-sm bg-navy-900/50 border border-white/10 shadow-2xl md:p-10 transform transition-all duration-500 hover:shadow-3xl hover:shadow-carolina-500/20"
    >
      <div class="space-y-2">
        <h1
          class="text-4xl font-bold leading-tight bg-gradient-to-r from-carolina-300 via-white to-carolina-200 bg-clip-text text-transparent sm:text-4xl md:text-5xl lg:text-6xl"
        >
          {title}
        </h1>
      </div>

      {
        description && (
          <p class="text-lg leading-relaxed text-gray-200 sm:text-xl">
            {description}
          </p>
        )
      }

      <div class="flex flex-wrap gap-4 pt-4">
        {
          cta1 && (
            <a
              href={cta1.buttonLink}
              class="transform rounded-xl bg-gradient-to-r from-carolina-500 to-carolina-600 px-8 py-4 text-sm font-semibold text-white shadow-lg transition-all duration-300 hover:-translate-y-1 hover:shadow-xl hover:shadow-carolina-500/30 hover:from-carolina-600 hover:to-carolina-700 focus:outline-none focus:ring-2 focus:ring-carolina-300 focus:ring-offset-2"
            >
              {cta1.buttonText}
            </a>
          )
        }

        {
          cta2 && (
            <a
              href={cta2.buttonLink}
              class="transform rounded-xl border-2 border-carolina-400/50 bg-navy-900/40 px-8 py-4 text-sm font-semibold text-carolina-100 backdrop-blur-sm transition-all duration-300 hover:-translate-y-1 hover:bg-navy-800/60 hover:border-carolina-300 hover:shadow-lg hover:shadow-carolina-500/20 focus:outline-none focus:ring-2 focus:ring-carolina-300 focus:ring-offset-2"
            >
              {cta2.buttonText}
            </a>
          )
        }
      </div>
    </div>
  </div>

  <!-- Scroll indicator -->
  <div class="absolute bottom-8 left-1/2 -translate-x-1/2 animate-bounce group">
    <div class="h-10 w-6 rounded-full border-2 border-carolina-300/70 flex items-center justify-center">
      <div class="h-3 w-0.5 bg-gradient-to-b from-carolina-300 to-carolina-100/50 rounded-full animate-scroll"></div>
    </div>
    <div class="absolute -bottom-2 left-1/2 -translate-x-1/2 opacity-0 group-hover:opacity-100 transition-opacity duration-300 text-xs text-carolina-200/80 font-medium">Scroll</div>
  </div>

  <style>
    @keyframes scroll {
      0% {
        transform: translateY(0);
        opacity: 1;
      }
      100% {
        transform: translateY(10px);
        opacity: 0;
      }
    }
    .animate-scroll {
      animation: scroll 1.5s infinite;
    }
  </style>
</section>
