---
import { Image } from "astro:assets";
import type { ImageType } from "../../lib/types";
import { urlForImage } from "../../lib/urlForImage";

export interface Props {
  name: string;
  title: string;
  image: ImageType;
  description: string;
  slug: {
    current: string;
    _type: string;
  };
}

const { name, title, image, description, slug } = Astro.props;
const imageUrl = image ? urlForImage(image).width(400).height(400).url() : "";
---

<div class="bg-white group flex flex-col h-[500px] m-0 p-0">
  <!-- Full-width image taking 3/4 of card height (375px) -->
  <div class="w-full h-[375px] relative overflow-hidden m-0">
    {
      imageUrl ? (
        <div class="absolute inset-0">
          <Image
            src={imageUrl}
            alt={`${name} - ${title}`}
            class="w-full h-full object-cover m-0"
            width={600}
            height={400}
            loading="lazy"
          />
        </div>
      ) : (
        <div class="absolute inset-0 bg-gray-100 flex items-center justify-center">
          <span class="text-gray-400 text-3xl font-bold">
            {name
              .split(" ")
              .map((n) => n[0])
              .join("")}
          </span>
        </div>
      )
    }
  </div>

  <!-- Content below image (125px) -->
  <div class="h-[125px] p-4 flex flex-col items-center justify-center">
    <h3 class="text-xl font-bold text-navy-900 mb-1">
      <a href={`/about/${slug.current}`} class="hover:text-carolina-700">{name}</a>
    </h3>
    <p class="text-sm text-carolina-700 font-medium uppercase tracking-wide">
      {title}
    </p>
  </div>
</div>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Smooth transitions for all interactive elements */
  * {
    transition-property: color, background-color, border-color,
      text-decoration-color, fill, stroke, opacity, box-shadow, transform,
      filter, backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 200ms;
  }
</style>
