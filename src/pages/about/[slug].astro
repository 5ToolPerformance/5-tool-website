---
// ./src/pages/about/[slug].astro
import type { SanityDocument } from "@sanity/client";
import { loadQuery } from "../../lib/load-query";
import { urlForImage } from "../../lib/urlForImage";
import Layout from "../../layouts/Layout.astro";
import type { Coach } from "../../lib/types";

export async function getStaticPaths() {
  const { data: coaches } = await loadQuery<SanityDocument[]>({
    query: `*[_type == "coach"]`,
  });

  return coaches.map(({ slug }) => {
    return {
      params: {
        slug: slug.current,
      },
    };
  });
}

const { params } = Astro;
const { data: coach } = await loadQuery<Coach>({
  query: `*[_type == "coach" && slug.current == $slug][0]`,
  params,
});

const imageUrl = coach?.image ? urlForImage(coach.image).url() : "";
---

<Layout title={`${coach?.name || "Coach"} | 5 Tool Performance`}>
  <div class="min-h-screen bg-gradient-to-b from-white to-carolina-50">
    {/* Hero Section */}
    <div
      class="relative bg-gradient-to-r from-navy-500 to-navy-700 py-16 md:py-24 shadow-lg"
    >
      <div
        class="absolute inset-0 opacity-10 bg-[url('/pattern.svg')] bg-cover"
      >
      </div>
      <div class="container mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
        <div class="max-w-3xl mx-auto text-center">
          <div class="mb-8 transform transition-transform hover:scale-105">
            {
              imageUrl && (
                <div class="mx-auto h-48 w-48 rounded-full border-4 border-white overflow-hidden bg-white shadow-xl ring-4 ring-carolina-400/30 hover:ring-carolina-400/50 transition-all duration-300">
                  <img
                    src={imageUrl}
                    alt={coach?.name}
                    class="h-full w-full object-cover"
                  />
                </div>
              )
            }
          </div>
          <h1 class="text-4xl md:text-5xl font-bold text-white drop-shadow-lg">
            {coach?.name}
          </h1>
          <p class="mt-3 text-xl text-carolina-200 font-medium">
            {coach?.title}
          </p>
        </div>
      </div>
    </div>

    {/* Main Content */}
    <div class="py-12 bg-white/90 backdrop-blur-sm">
      <div class="container mx-auto px-4 sm:px-6 lg:px-8 max-w-4xl">
        {/* About Section */}
        <div
          class="mb-12 p-8 rounded-xl bg-gradient-to-br from-white to-carolina-50 border border-carolina-100 shadow-sm hover:shadow-md transition-shadow duration-300"
        >
          <div class="flex items-center mb-6">
            <div class="h-1 w-10 bg-carolina-500 rounded-full mr-4"></div>
            <h2 class="text-2xl font-bold text-navy-900">
              About {coach?.name}
            </h2>
          </div>
          <div class="prose max-w-none text-navy-700">
            {
              coach?.description && (
                <div class="whitespace-pre-line leading-relaxed">
                  {coach.description}
                </div>
              )
            }
          </div>
        </div>

        {/* Philosophy Section */}
        <div
          class="mb-12 p-8 rounded-xl bg-gradient-to-br from-white to-carolina-50 border border-carolina-100 shadow-sm hover:shadow-md transition-shadow duration-300"
        >
          <div class="flex items-center mb-6">
            <div class="h-1 w-10 bg-carolina-500 rounded-full mr-4"></div>
            <h2 class="text-2xl font-bold text-navy-900">
              Coaching Philosophy
            </h2>
          </div>
          <div class="prose max-w-none text-navy-700">
            {
              coach?.philosophy && (
                <div class="whitespace-pre-line leading-relaxed">
                  {coach.philosophy}
                </div>
              )
            }
          </div>
        </div>

        {/* Expertise Section */}
        <div
          class="p-8 rounded-xl bg-gradient-to-br from-white to-carolina-50 border border-carolina-100 shadow-sm hover:shadow-md transition-shadow duration-300"
        >
          <div class="flex items-center mb-6">
            <div class="h-1 w-10 bg-carolina-500 rounded-full mr-4"></div>
            <h2 class="text-2xl font-bold text-navy-900">Areas of Expertise</h2>
          </div>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            {
              coach?.expertise?.length > 0 ? (
                coach.expertise.map((item: string) => (
                  <div class="flex items-start p-4 bg-white/50 rounded-lg border border-carolina-50 hover:border-carolina-200 transition-colors duration-200 group">
                    <div class="p-1.5 mr-3 bg-carolina-100 rounded-full group-hover:bg-carolina-200 transition-colors duration-200">
                      <svg
                        class="h-5 w-5 text-carolina-700"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M5 13l4 4L19 7"
                        />
                      </svg>
                    </div>
                    <span class="text-navy-800 font-medium">{item}</span>
                  </div>
                ))
              ) : (
                <p class="text-navy-500 italic">
                  No expertise information available.
                </p>
              )
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>
