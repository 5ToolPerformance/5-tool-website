---
import Layout from "../layouts/Layout.astro";
import { loadQuery } from "../lib/load-query";
import type { CompanyInfo } from "../lib/types";

const { data: companyInfo } = await loadQuery<CompanyInfo>({
  query: `*[_type == "companyInfo"][1]`,
});

const encodedAddress = encodeURIComponent(companyInfo?.address || "");
---

<Layout title="Contact | 5 Tool Performance">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <div class="text-center mb-12">
      <h1 class="text-4xl font-bold text-navy-900 mb-4">Get In Touch</h1>
      <p class="text-lg text-gray-600 max-w-2xl mx-auto">
        Have questions or want to learn more about our services? Reach out to us
        and we'll get back to you as soon as possible.
      </p>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
      <!-- Contact Information -->
      <div class="space-y-8">
        <div class="bg-white p-8 rounded-xl shadow-md">
          <h2 class="text-2xl font-semibold text-navy-800 mb-6">
            Contact Information
          </h2>

          <div class="space-y-6">
            <div class="flex items-start">
              <div
                class="flex-shrink-0 bg-carolina-100 p-3 rounded-lg text-carolina-700"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-6 w-6"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
                  ></path>
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                </svg>
              </div>
              <div class="ml-4">
                <h3 class="text-lg font-medium text-gray-900">Address</h3>
                <p class="mt-1 text-gray-600">
                  {companyInfo?.address || "1234 Performance Way"}<br />
                </p>
              </div>
            </div>

            <div class="flex items-start">
              <div
                class="flex-shrink-0 bg-carolina-100 p-3 rounded-lg text-carolina-700"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-6 w-6"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"
                  ></path>
                </svg>
              </div>
              <div class="ml-4">
                <h3 class="text-lg font-medium text-gray-900">Phone</h3>
                <p class="mt-1 text-gray-600">
                  <a
                    href={`tel:${companyInfo?.phone}`}
                    class="hover:text-carolina-700 transition-colors"
                  >
                    {companyInfo?.phone || "(123) 456-7890"}
                  </a>
                </p>
              </div>
            </div>

            <div class="flex items-start">
              <div
                class="flex-shrink-0 bg-carolina-100 p-3 rounded-lg text-carolina-700"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-6 w-6"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
                  ></path>
                </svg>
              </div>
              <div class="ml-4">
                <h3 class="text-lg font-medium text-gray-900">Email</h3>
                <p class="mt-1 text-gray-600">
                  <a
                    href={`mailto:${companyInfo?.email}`}
                    class="hover:text-carolina-700 transition-colors"
                  >
                    {companyInfo?.email || "contact@5toolperformance.com"}
                  </a>
                </p>
              </div>
            </div>
          </div>

          <div class="mt-8">
            <h3 class="text-lg font-medium text-navy-800 mb-4">
              Business Hours
            </h3>
            <ul class="space-y-2 text-gray-600">
              <li class="flex justify-between">
                <span>Monday - Friday</span>
                <span>9:00 AM - 6:00 PM</span>
              </li>
              <li class="flex justify-between">
                <span>Saturday</span>
                <span>10:00 AM - 4:00 PM</span>
              </li>
              <li class="flex justify-between">
                <span>Sunday</span>
                <span>Closed</span>
              </li>
            </ul>
          </div>
        </div>

        <!-- Google Maps -->
        <div class="bg-white p-1 rounded-xl shadow-md overflow-hidden">
          <div
            class="h-64 bg-gradient-to-br from-navy-500 to-carolina-600 rounded-xl overflow-hidden shadow-inner border border-gray-100"
          >
            <iframe
              title="Google Maps"
              loading="lazy"
              width="100%"
              height="100%"
              referrerpolicy="no-referrer-when-downgrade"
              src={`https://www.google.com/maps/embed/v1/place?key=AIzaSyBf4NSKdh-foEZf4tyQJzVbxJywcbprdNs&q=${encodedAddress}`}
              allowfullscreen
            >
            </iframe>
          </div>
        </div>
      </div>

      <!-- Contact Form -->
      <div class="bg-white p-6 rounded-lg shadow-lg">
        <h3 class="text-xl font-semibold mb-4">Send us a Message</h3>
        <form id="contactForm" class="space-y-4">
          <div>
            <label
              for="name"
              class="block text-sm font-medium text-gray-700 mb-1">Name</label
            >
            <input
              type="text"
              id="name"
              name="name"
              required
              class="w-full px-4 py-2.5 border border-gray-200 rounded-lg focus:ring-2 focus:ring-carolina-300 focus:border-carolina-300 transition-all duration-200 bg-white/50"
            />
          </div>

          <div>
            <label
              for="email"
              class="block text-sm font-medium text-gray-700 mb-1">Email</label
            >
            <input
              type="email"
              id="email"
              name="email"
              required
              class="w-full px-4 py-2.5 border border-gray-200 rounded-lg focus:ring-2 focus:ring-carolina-300 focus:border-carolina-300 transition-all duration-200 bg-white/50"
            />
          </div>

          <div>
            <label
              for="subject"
              class="block text-sm font-medium text-gray-700 mb-1"
              >Subject</label
            >
            <input
              type="text"
              id="subject"
              name="subject"
              required
              class="w-full px-4 py-2.5 border border-gray-200 rounded-lg focus:ring-2 focus:ring-carolina-300 focus:border-carolina-300 transition-all duration-200 bg-white/50"
            />
          </div>

          <div>
            <label
              for="message"
              class="block text-sm font-medium text-gray-700 mb-1"
              >Message</label
            >
            <textarea
              id="message"
              name="message"
              rows="4"
              required
              class="w-full px-4 py-2.5 border border-gray-200 rounded-lg focus:ring-2 focus:ring-carolina-300 focus:border-carolina-300 transition-all duration-200 bg-white/50"
            ></textarea>
          </div>

          <div id="formMessage" class="hidden p-3 rounded-md"></div>
          <button
            type="submit"
            id="submitButton"
            class="w-full bg-gradient-to-r from-carolina-500 to-carolina-600 text-white py-3 px-6 rounded-lg hover:from-carolina-600 hover:to-carolina-700 transition-all duration-200 font-medium shadow-md hover:shadow-lg hover:-translate-y-0.5 transform"
          >
            Send Message
          </button>
        </form>
      </div>
    </div>
  </div>
</Layout>

<style>
  .success-message {
    background-color: #f0fdf4;
    color: #166534;
    padding: 1rem;
    border-radius: 0.5rem;
    margin-bottom: 1rem;
    border: 1px solid #bbf7d0;
  }

  .error-message {
    background-color: #fef2f2;
    color: #991b1b;
    padding: 1rem;
    border-radius: 0.5rem;
    margin-bottom: 1rem;
    border: 1px solid #fecaca;
  }
</style>

<script>
  const form = document.getElementById("contactForm") as HTMLFormElement | null;
  const formMessage = document.getElementById(
    "formMessage"
  ) as HTMLDivElement | null;
  const submitButton = document.getElementById(
    "submitButton"
  ) as HTMLButtonElement | null;

  if (form) {
    form.addEventListener("submit", async (e) => {
      e.preventDefault();

      // Disable the submit button
      if (submitButton) {
        submitButton.disabled = true;
        submitButton.textContent = "Sending...";
      }

      // Clear previous messages
      if (formMessage) {
        formMessage.classList.add("hidden");
      }

      try {
        if (!form) {
          throw new Error("Form element not found");
        }
        const formData = new FormData(form);
        const response = await fetch("/api/contact", {
          method: "POST",
          body: formData,
        });

        const result = await response.json();

        // Show success/error message
        if (formMessage) {
          formMessage.textContent =
            result.message || result.error || "Message sent successfully!";
          formMessage.className = response.ok
            ? "success-message"
            : "error-message";
          formMessage.classList.remove("hidden");
        }

        // Reset form if successful
        if (response.ok && form) {
          form.reset();
          // Scroll to show the success message
          if (formMessage) {
            formMessage.scrollIntoView({
              behavior: "smooth",
              block: "nearest",
            });
          }
        }
      } catch (error) {
        console.error("Error:", error);
        if (formMessage) {
          formMessage.textContent =
            "An error occurred. Please try again later.";
          formMessage.className = "error-message";
          formMessage.classList.remove("hidden");
        }
      } finally {
        // Re-enable the submit button
        if (submitButton) {
          submitButton.disabled = false;
          submitButton.textContent = "Send Message";
        }
      }
    });
  }
</script>
