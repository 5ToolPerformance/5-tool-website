---
import Layout from "../../layouts/Layout.astro";
import { loadQuery } from "../../lib/load-query";
import { urlForImage } from "../../lib/urlForImage";
import PortableTextRender from "../../components/PortableTextRender.astro";
import type { BlogPostType } from "../../lib/types";
import type { TypedObject } from "@portabletext/types";

const { slug } = Astro.params;
if (!slug) {
  throw new Error("Missing slug parameter");
}

type FullBlogPost = BlogPostType & {
  content?: TypedObject[];
};

const { data: post } = await loadQuery<FullBlogPost>({
  query: `*[_type == "blogPost" && slug.current == $slug][0]{
    title,
    slug,
    image,
    author,
    content
  }`,
  params: { slug: slug as string },
});

if (!post) {
  Astro.response.status = 404;
  throw new Error("Post not found");
}
---

<Layout title={`${post.title} | 5 Tool Performance`}>
  <article class="bg-white">
    <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-10">
      <div class="mb-6">
        <a href="/blog" class="text-carolina hover:underline"
          >&larr; Back to Blog</a
        >
      </div>

      <h1 class="text-4xl font-bold text-navy-900 mb-2">
        {post.title}
      </h1>
      {post.author && <p class="text-navy-600 mb-6">By {post.author}</p>}

      {
        post.image && (
          <img
            src={urlForImage(post.image)
              .width(1200)
              .height(600)
              .fit("crop")
              .url()}
            alt={post.image?.alt || post.title}
            class="w-full h-auto rounded-lg shadow-lg mb-8"
            loading="eager"
          />
        )
      }

      {
        post.content && (
          <PortableTextRender content={post.content} class="prose-lg" />
        )
      }
    </div>
  </article>
</Layout>
